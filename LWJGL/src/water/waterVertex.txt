#version 400 core

in vec2 position;

out vec4 clipSpace;
out vec2 textureCoords;
out float visibility;
out vec3 toCameraVector;
out vec3 fromLightVector;
out vec2 positionZero;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;
uniform vec3 cameraPos;
uniform vec3 lightPosition;

const float density = 0.0017;
const float gradient = 10;
const float tiling = 4.0;

void main(void) {


	clipSpace = projectionMatrix * viewMatrix * modelMatrix * vec4(position.x, 0.0, position.y, 1.0);
	vec4 worldPosition = modelMatrix * vec4(position.x, 0.0, position.y, 1.0);
	vec4 positionRelativeToCam = viewMatrix * worldPosition;
	gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position.x, 0.0, position.y, 1.0);
	textureCoords = vec2(position.x/2.0 + 0.5, position.y/2.0 + 0.5) * tiling;
	
	toCameraVector =  cameraPos - worldPosition.xyz;
	fromLightVector = worldPosition.xyz - lightPosition;
 
 
 	float distance = length(positionRelativeToCam.xyz);
	visibility = exp(-pow((distance * density), gradient));
	visibility = clamp(visibility, 0.0, 1.0);
	//positionZero = vec2(160.0, -250.0);
	positionZero = position;
}